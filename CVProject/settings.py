"""
Django settings for CVProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Try to import decouple, fallback to defaults if not available
try:
    from decouple import config
    SECRET_KEY = config('SECRET_KEY', default='django-insecure-your-secret-key-here-change-in-production')
    DEBUG = config('DEBUG', default=True, cast=bool)
    DB_NAME = config('DB_NAME', default='cvproject_db')
    DB_USER = config('DB_USER', default='cvproject_user')
    DB_PASSWORD = config('DB_PASSWORD', default='cvproject_password')
    DB_HOST = config('DB_HOST', default='localhost')
    DB_PORT = config('DB_PORT', default='5432', cast=int)
    USE_SQLITE = config('USE_SQLITE', default=True, cast=bool)  # Default to SQLite for local development
    REDIS_URL = config('REDIS_URL', default='redis://localhost:6379/0')
    OPENAI_API_KEY = config('OPENAI_API_KEY', default='')
    HUGGINGFACE_API_KEY = config('HUGGINGFACE_API_KEY', default='')
except ImportError:
    # Fallback for when python-decouple is not installed
    SECRET_KEY = 'django-insecure-your-secret-key-here-change-in-production'
    DEBUG = True
    DB_NAME = 'cvproject_db'
    DB_USER = 'cvproject_user'
    DB_PASSWORD = 'cvproject_password'
    DB_HOST = 'localhost'
    DB_PORT = 5432
    USE_SQLITE = True  # Default to SQLite for local development
    REDIS_URL = 'redis://localhost:6379/0'
    OPENAI_API_KEY = ''
    HUGGINGFACE_API_KEY = ''

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY is set above

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG is set above

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'main.middleware.RequestLoggingMiddleware',
]

ROOT_URLCONF = 'CVProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.context_processors.settings_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'CVProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database configuration
import os
import dj_database_url

# Check if DATABASE_URL is set (Railway, Heroku, etc.)
DATABASE_URL = config('DATABASE_URL', default='')

if DATABASE_URL:
    # Use DATABASE_URL for cloud deployments
    DATABASES = {
        'default': dj_database_url.parse(DATABASE_URL)
    }
elif USE_SQLITE:
    # Use SQLite for local development
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    # Use PostgreSQL for Docker/production
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'HOST': DB_HOST,
            'PORT': DB_PORT,
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = [
    BASE_DIR / 'static',
] if (BASE_DIR / 'static').exists() else []

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Celery Configuration
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# Celery Beat Schedule (for periodic tasks)
CELERY_BEAT_SCHEDULE = {
    'send-daily-report': {
        'task': 'main.tasks.send_daily_report',
        'schedule': 86400.0,  # 24 hours
    },
}
